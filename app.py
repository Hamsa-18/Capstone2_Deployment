# -*- coding: utf-8 -*-
"""app.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dvVZzpCwTcnZYXs1FGynyJH1DKrmC3H4
"""

import streamlit as st
import pickle
import numpy as np
import pandas as pd

# ------------------ Page Config ------------------
st.set_page_config(page_title="Heart Disease Risk Predictor ‚ù§Ô∏è", layout="wide")

st.sidebar.title("ü©∫ Patient Information")
st.sidebar.markdown("Enter the following health details:")

# ------------------ User Inputs ------------------
age = st.sidebar.number_input("Age", 1, 120, 50)
sex = st.sidebar.selectbox("Sex (1=Male, 0=Female)", [1, 0])
cp = st.sidebar.selectbox("Chest Pain Type (0-3)", [0, 1, 2, 3])
trestbps = st.sidebar.number_input("Resting Blood Pressure", 80, 200, 120)
chol = st.sidebar.number_input("Cholesterol Level", 100, 600, 200)
fbs = st.sidebar.selectbox("Fasting Blood Sugar > 120 mg/dl (1=True, 0=False)", [1, 0])
restecg = st.sidebar.selectbox("Resting ECG Results (0-2)", [0, 1, 2])
thalach = st.sidebar.number_input("Maximum Heart Rate Achieved", 60, 250, 150)
exang = st.sidebar.selectbox("Exercise Induced Angina (1=Yes, 0=No)", [1, 0])
oldpeak = st.sidebar.number_input("Oldpeak (ST depression)", 0.0, 10.0, 1.0)
slope = st.sidebar.selectbox("Slope of ST Segment (0-2)", [0, 1, 2])
ca = st.sidebar.selectbox("Number of Major Vessels (0-3)", [0, 1, 2, 3])
thal = st.sidebar.selectbox("Thalassemia (1=Normal, 2=Fixed defect, 3=Reversible defect)", [1, 2, 3])

# ------------------ Load Model ------------------
@st.cache_resource
def load_model():
    try:
        with open("model.pkl", "rb") as file:
            model = pickle.load(file)
        return model
    except FileNotFoundError:
        st.error("‚ùå Model file 'model.pkl' not found. Please ensure it is in the same directory.")
        return None

model = load_model()

# ------------------ Feature Columns ------------------
feature_columns = [
    "age", "sex", "cp", "trestbps", "chol", "fbs",
    "restecg", "thalach", "exang", "oldpeak", "slope", "ca", "thal"
]

# Create dataframe for prediction
user_data = pd.DataFrame([[age, sex, cp, trestbps, chol, fbs,
                           restecg, thalach, exang, oldpeak, slope, ca, thal]],
                         columns=feature_columns)

# ------------------ Prediction ------------------
st.markdown("## ‚ù§Ô∏è Heart Disease Risk Assessment")
if st.button("üîç Predict Heart Disease Risk"):
    if model is not None:
        try:
            prediction = model.predict(user_data)[0]
            if prediction == 1:
                st.error("üö® The patient is at **risk of heart disease**.")
            else:
                st.success("‚úÖ The patient is **not at risk** of heart disease.")
        except Exception as e:
            st.error(f"An error occurred during prediction: {e}")
    else:
        st.warning("‚ö†Ô∏è Model not loaded. Please check 'model.pkl'.")

# ------------------ Footer ------------------
st.markdown("---")
st.caption("Developed by Hamsa | Data Science Capstone Project 2")

